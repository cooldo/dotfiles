#[ -f  ~/.mybashrc ] && source ~/.mybashrc
set -o vi
EDITOER=vi
alias apti='sudo apt-get install'
alias m='sudo minicom -C /media/sf_share/log/log-$(date +%Y-%m-%d_%H_%M_%S).log'
alias ta='tmux attach'
alias sg='systemctl -la | grep'
alias pg='ps -aux | grep'
alias c='clear'
alias sp='sudo /bin/bash -c "$(history  | tail -n 2 | head -n 1 | cut -d" " -f3-)"'
alias lt='ls -ltr'

stty -ixon -ixoff

# new find and grep command
fag () {
    if [ $# -ne 1 ];then
        return
    fi
    #find . -iname "*$1*" ;
    # grep is nothing more than highlight the search keyword
    find . -iname "*$1*" | grep "$1";
}

# replace $1 to $2
replace ()
{
    find . -type f -exec sed -i s/"$1"/"$2"/g {} \;
}

# generate random password
genpass ()
{
   tr -dc 'a-zA-Z0-9#@.-' < /dev/urandom | head -c ${1:-14}; echo
}

rpmview() {
    rpm2cpio $1 |cpio -ivd
}

bushow()
{
dbus-send --session           \
  --dest=org.freedesktop.DBus \
  --type=method_call          \
  --print-reply               \
  /org/freedesktop/DBus       \
  org.freedesktop.DBus.ListNames
}

# pulseaudio config
pa-list() { pacmd list-sinks | awk '/index/ || /name:/' ;}
pa-set() {
    # list all apps in playback tab (ex: mplayer, vlc)
    inputs=($(pacmd list-sink-inputs | awk '/index/ {print $2}'))
    # set the default output device
    pacmd set-default-sink $1 &> /dev/null
    for i in ${inputs[*]}; do pacmd move-sink-input $i $1 &> /dev/null; done
}
pa-playbacklist() {
    # list individual apps
    echo "=================="
    echo "Running Apps"
    pacmd list-sink-inputs | awk '/index/ || /application.name /'

    # list all sound devices
    echo "=================="
    echo "Running Devices"
    pacmd list-sinks | awk '/index/ || /name:/'
}
pa-playbackset() {
    # set the default output device
    pacmd set-default-sink "$2" &> /dev/null
    # apply change to one running app to use the new output device
    pacmd move-sink-input "$1" "$2" &> /dev/null
}

h() {
    grep "$@" ~/.bash_history*
}

# base16 color
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        eval "$("$BASE16_SHELL/profile_helper.sh")"

# Func to extend history and print return code
PROMPT_COMMAND=__prompt_command

__prompt_command() {
    local curr_exit="$?"
    local BRed='\[\e[0;91m\]'
    local RCol='\[\e[0m\]'
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
    if [ "$curr_exit" != 0 ]; then
       PS1="[${BRed}$curr_exit${RCol}]$PS1"
    fi
    # save history
    history -a
}

# dark level 1
#base16_pop
# dark level 2
#base16_summerfruit-dark
# dark level 3, blue fg file
#base16_atelier-cave
# dark level 3, yellow fg file
#base16_atelier-heath
# dark level 3, blue fg file
base16_google-dark
# dark level 4
#base16_tube
# light
#base16_google-light
#base16_papercolor-light
#screenfetch
#export http_proxy="socks5://127.0.0.1:1080"
#export https_proxy="socks5://127.0.0.1:1080"
export HISTFILESIZE=400000000
export HISTSIZE=10000
